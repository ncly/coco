nrow(PP)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(2, 50, 3072))
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(2, 50, 100))
min(x)
#max(x)
#nrow(x)/2
median(x)
mean(x)
plot(x)
library(fExtremes)
library(evir)
BMW = as.timeSeries(data("bmw"))
PP = pointProcess(x = BMW, u = quantile(as.vector(BMW), 0.999))
PP
nrow(PP)
library(fExtremes)
library(evir)
BMW = as.timeSeries(data("bmw"))
PP = pointProcess(x = BMW, u = quantile(as.vector(BMW), 0.9999))
PP
nrow(PP)
library(fExtremes)
library(evir)
BMW = as.timeSeries(data("bmw"))
PP = pointProcess(x = -BMW, u = quantile(as.vector(BMW), 0.9999))
PP
nrow(PP)
library(fExtremes)
library(evir)
BMW = as.timeSeries(data("bmw"))
PP = pointProcess(x = -BMW, u = quantile(as.vector(BMW), 0.999))
PP
nrow(PP)
library(fExtremes)
library(evir)
BMW = as.timeSeries(data("bmw"))
PP1 = pointProcess(x = -BMW, u = quantile(as.vector(BMW), 0.999))
BMW = as.timeSeries(data("bmw"))
PP2 = pointProcess(x = BMW, u = quantile(as.vector(BMW), 0.999))
PP1
PP2
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
BMW = as.timeSeries(data("bmw"))
PP1 = pointProcess(x = -BMW, u = quantile(as.vector(BMW), 0.999))
BMW = as.timeSeries(data("bmw"))
PP2 = pointProcess(x = BMW, u = quantile(as.vector(BMW), 0.999))
PP1
PP2
nrow(PP)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(2, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(2, 50, 100))
min(x)
#max(x)
#nrow(x)/2
median(x)
mean(x)
plot(x)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(2, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(2, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
help("findThreshold")
help("findthres")
help("findthres")
help("findThreshold")
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 3072))
plot(x)
x = -as.timeSeries(data("bmw"))
findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
positivThreshold <- findThreshold(x, n = c(1, 50, 3072))
plot(x)
x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = c(1, 50, 100))
help("pmax")
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
positivThreshold <- findThreshold(x, n = c(1, 50, 3072))
a <- if(x>positivThreshold)
plot(x)
x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = c(1, 50, 100))
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
positivThreshold <- findThreshold(x, n = c(1, 50, 3072))
a <- if(x>positivThreshold) print x
plot(x)
x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = c(1, 50, 100))
help(fExtremes)
help("findthresh")
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
positivThreshold <- findThreshold(x, n = c(1, 50, 3072))
findthresh(x, 1)
a <- if(x>positivThreshold) print x
plot(x)
x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = c(1, 50, 100))
findthresh(x, 1)
findthresh(x, 1)
findthresh(x, 1)
findthresh(x, 1)
findthresh(-x, 1)
findthresh(-x, 0)
findthresh(-x, 0)
findthresh(-x, 0)
findthresh(-x, 0)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(-x, 1)
findthresh(x, 1)
findthresh(x, 1)
max(x)
findthresh(x, 1)
min(x)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))
positivThreshold <- findThreshold(x, n = 1)
findthresh(x, 1)
min(x)
x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
x = as.timeSeries(data("bmw"))
positivThreshold <- findThreshold(x, n = 1)
tail(sort(x),5)
findthresh(x, 1)
min(x)
tail(sort(x),1)
library(evir)
x = as.timeSeries(data("bmw"))
positivThreshold <- findThreshold(x, n = 1)
tail(sort(x),2)
x = as.timeSeries(data("bmw"))
x
tail(sort(x), 2)
positivThreshold <- findThreshold(x, n = 1)
tail(sort(x), 10)
sort(x)
help("sort")
y <- sort(data("bmw"))
y <- sort(data("bmw"))
y
y
y
data("bmw")
data("bmw")
c(data("bmw"))
as.timeSeries(data("bmw"))
x = as.timeSeries(data("bmw"))$SS.1
x = as.timeSeries(data("bmw"))$SS.1
x = as.timeSeries(data("bmw"))$SS.1
x = as.timeSeries(data("bmw"))$SS.1
x
x = as.timeSeries(data("bmw"))$SS.1
y <- sort(x)
y
x = as.timeSeries(data("bmw"))$SS.1
y <- sort(x)
tail(sort(x), 10)
x = as.timeSeries(data("bmw"))$SS.1
tail(sort(x), 10)
tail(sort(-x), 10)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
tail(sort(x), 10)
tail(sort(-x), 10)
positivThreshold <- findThreshold(x, n = 1)
findthresh(x, 1)
min(x)
x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
x = as.timeSeries(data("bmw"))$SS.1
tail(sort(x), 1)
tail(sort(-x), 1)
x = as.timeSeries(data("bmw"))$SS.1
tail(sort(x), 1)
-tail(sort(-x), 1)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
tail(sort(x), 1)
- tail(sort(-x), 1)
#positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
#negativThreshold <- findThreshold(x, n = 1)
tail(sort(x), 1)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
positiveJumps <- tail(sort(x), 1)
negativeJumps <- - tail(sort(-x), 1)
jumps <- cbind(positiveJumps, negativeJumps)
#positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
#negativThreshold <- findThreshold(x, n = 1)
jumps
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
positiveJumps <- tail(sort(x), 1)
negativeJumps <- - tail(sort(-x), 1)
jumps <- rbind(positiveJumps, negativeJumps)
#positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
#negativThreshold <- findThreshold(x, n = 1)
jumps
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
positiveJumps <- tail(sort(x), 1)
negativeJumps <- - tail(sort(-x), 1)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
#positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
#negativThreshold <- findThreshold(x, n = 1)
mean(jumps)
jumps <- rbind(positiveJumps, negativeJumps)
jumps
jumps
mean(jumps)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
positiveJumps <- tail(sort(x), 1)
negativeJumps <- - tail(sort(-x), 1)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
positiveJumps <- tail(sort(x), 2)
negativeJumps <- - tail(sort(-x), 2)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
#positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
#negativThreshold <- findThreshold(x, n = 1)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
positiveJumps <- tail(sort(x), 2)
negativeJumps <- - tail(sort(-x), 2)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
#positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
#negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
#positiveJumps <- tail(sort(x), 2)
#negativeJumps <- - tail(sort(-x), 2)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- findThreshold(x, n = 1)
negativThreshold <- - findThreshold(x, n = 1)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
#positiveJumps <- tail(sort(x), 2)
#negativeJumps <- - tail(sort(-x), 2)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- - findThreshold(x, n = 1)
jumps <- rbind(positivThreshold, negativThreshold)
mean(jumps)
sd(jumps)
library(fExtremes)
library(evir)
x = as.timeSeries(data("danish"))$SS.1
#positiveJumps <- tail(sort(x), 2)
#negativeJumps <- - tail(sort(-x), 2)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- - findThreshold(x, n = 1)
jumps <- rbind(positivThreshold, negativThreshold)
mean(jumps)
sd(jumps)
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
#positiveJumps <- tail(sort(x), 2)
#negativeJumps <- - tail(sort(-x), 2)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- - findThreshold(x, n = 1)
jumps <- rbind(positivThreshold, negativThreshold)
mean(jumps)
sd(jumps)
help("data")
library(help = "datasets")
library(fExtremes)
library(evir)
x = as.timeSeries(data("bmw"))$SS.1
#positiveJumps <- tail(sort(x), 2)
#negativeJumps <- - tail(sort(-x), 2)
jumps <- rbind(positiveJumps, negativeJumps)
mean(jumps)
sd(jumps)
positivThreshold <- findThreshold(x, n = 1)
#findthresh(x, 1)
#min(x)
#x = -as.timeSeries(data("bmw"))
negativThreshold <- - findThreshold(x, n = 1)
jumps <- rbind(positivThreshold, negativThreshold)
mean(jumps)
sd(jumps)
library(fExtremes)
estimate_Jump_parameters <- function(returns, jumpIntensity){
# Estimation of mean jump size, standard deviation of jumps
positivThreshold <- findThreshold(x, n = jumpIntensity)
negativThreshold <- - findThreshold(x, n = jumpIntensity)
jumps <- rbind(positivThreshold, negativThreshold)
mean_jump <- mean(jumps)
sd_jump <- sd(jumps)
return(list("mean_jump" = mean_jump, "sd_jump" = sd_jump))
}
x = as.timeSeries(data("bmw"))$SS.1
estimate_Jump_parameters(x, 2)
library(fExtremes)
estimate_Jump_parameters <- function(returns, jumpIntensity){
# Estimation of mean jump size, standard deviation of jumps
positivThreshold <- findThreshold(x, n = jumpIntensity)
negativThreshold <- - findThreshold(x, n = jumpIntensity)
jumps <- rbind(positivThreshold, negativThreshold)
mean_jump <- mean(jumps)
sd_jump <- sd(jumps)
return(list("mean_jump" = mean_jump, "sd_jump" = sd_jump))
}
x = as.timeSeries(data("bmw"))$SS.1
estimate_Jump_parameters(x, 3)
library(fExtremes)
estimate_Jump_parameters <- function(returns, jumpIntensity){
# Estimation of mean jump size, standard deviation of jumps
positivThreshold <- findThreshold(x, n = jumpIntensity/2)
negativThreshold <- - findThreshold(x, n = jumpIntensity/2)
jumps <- rbind(positivThreshold, negativThreshold)
mean_jump <- mean(jumps)
sd_jump <- sd(jumps)
return(list("mean_jump" = mean_jump, "sd_jump" = sd_jump))
}
x = as.timeSeries(data("bmw"))$SS.1
estimate_Jump_parameters(x, 3)
